[DB 모델링]
=> 데이터를 식별하고, 데이터 간의 관계를 식별하여 글과 그림으로 표현.
=> 정규화를 통해 데이터의 중복을 제거.
   중복된 데이터는 업무의 실행에 문제를 일으킨다.
   

[논리 모델]
=> 논리적인 개념을 식별하여 표현
1. 엔티티 식별 
   => 업무에서 취급하는 데이터를 식별한다.
   => DBMS에서 테이블이라 부른다.
   => 자바에서는 Value Object(=Data Transfer Object)라 부른다.
   => 데이터의 각 항목을 식별하여 정의한다.

2. Primary Key 선정
   => 모든 테이블은 데이터를 식별할 때 사용할 PK를 반드시 가져야 한다.
      그래야만 데이터를 변경하거나 삭제하고 조회할 때 구분할 수 있다.
1) Key 식별
   => Key? 데이터를 식별할 때 비교할 컬럼들의 값
   => 한 개 이상의 컬럼을 키로 지정할 수 있다.
   => 예)
      제품명, 주문자명, 전화, 주문일
      제품명, 주문자명, 이메일, 주문일
      제품명, 이메일, 주문일
      제품명, 전화, 주문일
      제품명, 제조사명, 전화, 주문일
      ...
2) Candidate Key(후보 키, 최소 키)
   => 위에서 찾은 키 목록에서 최소의 컬럼으로 키를 구성한 것.
   => 예) 
      제품명, 전화, 주문일
      제품명, 이메일, 주문일
      제품명, 제조사명, 전화, 주문일
      ...
3) Primary Key(주 키)
   => 후보 키들 중에서 DBMS 관리자가 사용하기 결정한 키 
   => 나머지 후보 키들은 비록 PK는 아니지만, 중복되어서는 안되기 때문에 Unique 컬럼으로 지정한다.
   => 후보 키들도 PK로 사용할 수 있다. 다만 관리자가 선택하지 않았을 뿐이다.
      그러니 PK처럼 중복되어서는 안된다.
   => 예)
      [제품명, 이메일, 주문일] 이렇게 세 개의 컬럼을 묶어서 PK로 사용할 수 있다.
   => 실무!
      실무에서는 여러 개의 컬럼을 묶어서 PK로 사용하면 불편하기 때문에,
      일련번호와 같은 임의의 컬럼을 추가하여 PK로 지정하는 방법을 주로 사용한다.     
         
            

3. 제1정규화
   => 중복되는 값이나 컬럼이 있다면 별도의 테이블로 분리하고, 부모-자식 관계를 맺는다.
   => 관계
      자식 테이블 쪽에 부모 테이블의 PK 값을 저장할 FK 컬럼을 추가한다.
        
4. 제2정규화
   => 두 개 이상의 PK 컬럼을 가진 경우 이 정규화를 수행한다.
   => PK 컬럼 모두에 종속되지 않은 일반 컬럼이 있다면 분리하여 부모-자식 관계를 맺는다.
   
5. 제3정규화
   => PK에 종속되지 않고 다른 일반 컬럼에 종속된 컬럼이 있다면 별도로 분리하여 부모-자식 관계를 맺는다.
   
6. Unique 컬럼 설정

7. Index 컬럼 설정

8. NOT NULL 컬럼을 지정


[물리 모델]
=> 논리 모델을 DBMS의 맞춰서 구성하는 것.


[포워드/리버스 엔지니어링]
=> 모델을 DBMS SQL로 변환하거나(forward engineering)
=> DBMS 테이블을 모델로 변환(reverse engineering)하는 것









