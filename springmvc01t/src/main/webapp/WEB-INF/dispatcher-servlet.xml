<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 특정 자바 패키지를 뒤져서 @Component, @Controller, @Service, @Repository
         애노테이션이 붙은 클래스를 찾아, 그 클래스의 인스턴스를 생성한다. -->
    <context:component-scan base-package="web"/>     
     
    
    <!-- RequestMappingHandlerAdapter => 요청 처리와 관련된 객체를 관리한다. -->
    <!-- 파라미터 변환기를 등록시켜주는 객체를 지정한다. -->
    <!-- Spring 2.5 방식 --> 
    <!-- 
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		    <property name="cacheSeconds" value="0"/>
		    <property name="webBindingInitializer">
		        <bean class="web.MyWebBindingInitializer"/>
		    </property>
		</bean> 
		-->
		
		<!-- Spring 3.2 방식  -->
		<!--  
		<mvc:annotation-driven/>
		<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="order" value="0" />
        <property name="cacheSeconds" value="0"/>
        <property name="webBindingInitializer">
            <bean class="web.MyWebBindingInitializer"/>
        </property>
    </bean>
    -->
    
    <!-- Spring 4 방식 -->
    <!-- XML 설정으로 처리하지 않고 @ControllerAdvice 애노테이션으로 처리한다. 
         MyControllerAdvice 클래스 참고하라! 
         그러나 MVC 관련 애노테이션을 처리하는 객체는 등록해야 한다.
    -->
    <mvc:annotation-driven/>
    
    <!-- 멀티파트 요청 데이터를 처리할 객체를 등록한다. -->
    <bean id="multipartResolver"
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 업로드할 수 있는 파일의 최대 크기 설정(바이트) -->
		    <property name="maxUploadSize" value="10000000"/>
		</bean>
    
</beans>








